# CWC teaching module steps

## Intro to the app
* Install VS code
* Create github account
* Fork the the clinical-saffety-hazard-documentation repo from github
* Show final app running on own computer

## Now build the app from scratch whilst learning about coding along the way
* Build a Docker-compose.yaml file to start up environment
* May need separate Dockerfiles to build container environments

* Log into container with
>> docker exec -it dcsp-docs-builder bash

* Good reading resource - https://realpython.com/django-setup/
* Create a new django project
>> django-admin startproject dcsp
* Jump into the newly created project
>> cd ./dcsp
* Create a new django app
>> python3 manage.py startapp app
* Start up the basic Django app and then go to http://0.0.0.0:8000
>> python3 manage.py runserver 0.0.0.0:8000
* Close down the server with ctrl-c
* Follow https://realpython.com/get-started-with-django-1/
* or perhaps https://docs.djangoproject.com/en/4.2/intro/tutorial01/
* in dcsp/dcsp/settings.py add 'app' to the INSTALLED_APPS list.
>> pip install tzdata
* Some Django writing up
* Add NHS styling and javascript for reacting
* Install Materials for mkdocs (in mkdocs dir)
>> mkdocs new .
* Test out
>> mkdocs serve


--------
* pip freeze to get requirements and copy into requirements.txt file
>> pip freeze
* mypy to check for typing
* Learn python
* Write python with PEP8 styling (to improve readability) - https://realpython.com/python-pep8/
* Linter for better styling
* mypi for hint type checking 
* Add a devcontainer.json - here you can add what python version you want for linters and so on
* https://en.wikipedia.org/wiki/Single-responsibility_principle

Notes:
If Docker cannot build the container (eg "network [network long name] not found), try this:
>> docker compose -f docker-compose-dev.yml up --force-recreate -d


# Mkdocs on Github
Need to set ph-pages on Github as publishing source for mkdocs.

----
# Notes:

You cannot have variables (eg {{ variable_name}}) inside the metadata of markdown files for mkdocs. Mkdocs does not recognise the format and shows the meta data on the broswer screen.

You need to add github secrets for updating issue labels. Need to manually run once as well.

# Docker and DockerHub
To build and push an image to DockerHub (need to be in dockerfiles/app folder)
>> docker login
>> docker build . -t cotswoldsmaker/dcsp:latest

To re-tag an image
>> docker image tag dcsp cotswoldsmaker/dcsp:latest

>> docker image push cotswoldsmaker/dcsp:latest

Playing around with builds
>> docker build . --label "SHA=SHA12321" -t cotswoldsmaker/dcsp:a_third_SHA
>> docker image push cotswoldsmaker/dcsp:a_third_SHA

$ curl -X GET https://registry.hub.docker.com/v1/repositories/cotswoldsmaker/dcsp/tags
[{"layer": "", "name": "32"}, {"layer": "", "name": "33"}, {"layer": "", "name": "34"}]

curl -X GET https://hub.docker.com/v2/repositories/cotswoldsmaker/dcsp/tags 

>> python3 manage.py migrate
>> python3 manage.py createsuperuser
>> manage.py collectstatic


Fast get into cicd folder

>> docker exec -it --workdir=/dcsp/cicd dcsp-docs-builder bash

